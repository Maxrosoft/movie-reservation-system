version: "3.8"

services:
  backend:
    image: movies-backend
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      PORT: ${PORT}
      POSTGRES_URI: ${POSTGRES_URI}
      TOKEN_SECRET: ${TOKEN_SECRET}
      ADMIN_TOKEN_SECRET: ${ADMIN_TOKEN_SECRET}
      SUPER_ADMIN_TOKEN_SECRET: ${SUPER_ADMIN_TOKEN_SECRET}
      SUPER_ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL}
      SUPER_ADMIN_PASSWORD: ${SUPER_ADMIN_PASSWORD}
      BREVO_LOGIN: ${BREVO_LOGIN}
      BREVO_KEY: ${BREVO_KEY}
      BREVO_SENDER: ${BREVO_SENDER}
      REDIS_URL: ${REDIS_URL}
    ports:
      - "3000:3000"
    networks:
      - backend

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    command: redis-server
    volumes:
      - redis:/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend

volumes:
  db-data:
  redis:
  pgadmin-data:

networks:
  backend:
